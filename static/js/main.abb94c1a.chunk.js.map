{"version":3,"sources":["SortingAlgotithms/mergesort.js","SortingAlgotithms/quicksort.js","components/SortingVisualizer/index.js","SortingAlgotithms/bubblesort.js","components/App/index.js","index.js"],"names":["mergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","startIndex","endIndex","middleIndex","Math","floor","k","i","j","push","doMerge","swap","leftIndex","rightIndex","animation","operation","positions","temp","quickSort","left","right","index","pivot","partition","PRIMARY_COLOR","SECONDARY_COLOR","withStyles","arrayConatainer","display","justifyContent","marginLeft","marginRight","marginTop","arrayElement","direction","backgroundColor","width","buttonsBar","margin","buttonSpacing","withTheme","props","classes","speed","Box","className","map","value","style","height","key","Button","variant","color","onClick","getMergeSortAnimations","arrayBars","document","getElementsByClassName","barOneIndex","barTwoIndex","barOneStyle","barTwoStyle","setTimeout","newHeight","swapped","tmp","getBubbleSortAnimations","getQuickSortAnimations","console","log","personalizedAppBar","state","arraySize","this","resetArray","prop","setState","newArray","randomInt","min","max","random","AppBar","position","appBarColor","Container","maxWidth","Toolbar","Typography","align","title","sliderBox","sliderText","Slider","slider","onChange","e","handleSliderChange","defaultValue","buttonReset","SortingVisualizer","React","Component","theme","breakpoints","down","paddingBottom","createMuiTheme","palette","primary","main","secondary","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.abb94c1a.chunk.js","sourcesContent":["function doMerge(array, startIndex, middleIndex, endIndex, auxiliaryArray, animations) {\r\n  let k = startIndex;\r\n  let i = startIndex;\r\n  let j = middleIndex + 1;\r\n  while (i <= middleIndex && j <= endIndex) {\r\n    // change color.\r\n    animations.push([i, j]);\r\n    // revert their color.\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      // rewrite value\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      array[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      // rewrite value\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      array[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIndex) {\r\n    // change color.\r\n    animations.push([i, i]);\r\n    // revert their color.\r\n    animations.push([i, i]);\r\n    // rewrite value;\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    array[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIndex) {\r\n    // change color.\r\n    animations.push([j, j]);\r\n    // revert their color.\r\n    animations.push([j, j]);\r\n    // rewrite value;\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    array[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n\r\nfunction mergeSortHelper(array, startIndex, endIndex, auxiliaryArray, animations) {\r\n  if (startIndex === endIndex) return;\r\n  const middleIndex = Math.floor((startIndex + endIndex) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIndex, middleIndex, array, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIndex + 1, endIndex, array, animations);\r\n  doMerge(array, startIndex, middleIndex, endIndex, auxiliaryArray, animations);\r\n}\r\n\r\nexport default function mergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n","function swap(array, leftIndex, rightIndex, animations) {\r\n  let animation = {\r\n    operation: 'swap',\r\n    positions: [leftIndex, array[rightIndex]]\r\n  };\r\n  animations.push(animation);\r\n  animation = {\r\n    operation: 'swap',\r\n    positions: [rightIndex, array[leftIndex]]\r\n  };\r\n  animations.push(animation);\r\n  const temp = array[leftIndex];\r\n  array[leftIndex] = array[rightIndex];\r\n  array[rightIndex] = temp;\r\n}\r\nfunction partition(array, left, right, animations) {\r\n  const pivot = array[Math.floor((right + left) / 2)];\r\n  let animation;\r\n  let i = left;\r\n  let j = right;\r\n  while (i <= j) {\r\n    while (array[i] < pivot) {\r\n      animation = {\r\n        operation: 'change-color',\r\n        positions: [i, Math.floor((right + left) / 2)]\r\n      };\r\n      animations.push(animation);\r\n      animation = {\r\n        operation: 'revert-color',\r\n        positions: [i, Math.floor((right + left) / 2)]\r\n      };\r\n      animations.push(animation);\r\n      i++;\r\n    }\r\n    while (array[j] > pivot) {\r\n      animation = {\r\n        operation: 'change-color',\r\n        positions: [j, Math.floor((right + left) / 2)]\r\n      };\r\n      animations.push(animation);\r\n      animation = {\r\n        operation: 'revert-color',\r\n        positions: [j, Math.floor((right + left) / 2)]\r\n      };\r\n      animations.push(animation);\r\n      j--;\r\n    }\r\n    if (i <= j) {\r\n      swap(array, i, j, animations);\r\n      i++;\r\n      j--;\r\n    }\r\n  }\r\n  return i;\r\n}\r\n\r\nfunction quickSort(array, left, right, animations) {\r\n  let index;\r\n  if (array.length > 1) {\r\n    index = partition(array, left, right, animations);\r\n    if (left < index - 1) {\r\n      quickSort(array, left, index - 1, animations);\r\n    }\r\n    if (index < right) {\r\n      quickSort(array, index, right, animations);\r\n    }\r\n  }\r\n  return animations;\r\n}\r\n\r\nexport default function quickSortAnimations(array) {\r\n  const animations = [];\r\n  quickSort(array, 0, array.length - 1, animations);\r\n  return animations;\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport getMergeSortAnimations from '../../SortingAlgotithms/mergesort';\r\nimport getBubbleSortAnimations from '../../SortingAlgotithms/bubblesort';\r\nimport getQuickSortAnimations from '../../SortingAlgotithms/quicksort';\r\n\r\nconst PRIMARY_COLOR = '#408050';\r\n\r\nconst SECONDARY_COLOR = 'red';\r\n\r\nconst styles = () => ({\r\n  arrayConatainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginLeft: 30,\r\n    marginRight: 30,\r\n    marginTop: 10\r\n  },\r\n  arrayElement: {\r\n    display: 'inline-flex',\r\n    direction: 'colunm',\r\n    marginRight: 2,\r\n    backgroundColor: PRIMARY_COLOR,\r\n    width: 100\r\n  },\r\n  buttonsBar: {\r\n    margin: 30,\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  buttonSpacing: {\r\n    marginRight: 40\r\n  }\r\n});\r\n\r\nfunction SortingVizualizer(props) {\r\n  const { classes } = props;\r\n  const { speed } = props;\r\n  const { array } = props;\r\n\r\n  function AnimateMergesort() {\r\n    const animations = getMergeSortAnimations(array);\r\n    for (let i = 0; i < animations.length; i += 1) {\r\n      const arrayBars = document.getElementsByClassName(classes.arrayElement);\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIndex, barTwoIndex] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * speed);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIndex, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIndex].style;\r\n          barOneStyle.height = `${newHeight / 1.4}px`;\r\n        }, i * speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  function AnimateBubbleSort() {\r\n    const animations = getBubbleSortAnimations(array);\r\n    for (let i = 0; i < animations.length; i += 1) {\r\n      const arrayBars = document.getElementsByClassName(classes.arrayElement);\r\n      if (animations[i].operation === 'change-color') {\r\n        const [barOneIndex, barTwoIndex] = animations[i].positions;\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n          barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n        }, i * speed);\r\n      }\r\n      if (animations[i].operation === 'revert-color') {\r\n        const [barOneIndex, barTwoIndex] = animations[i].positions;\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n          barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n        }, i * speed);\r\n      }\r\n      if (animations[i].operation === 'swap') {\r\n        setTimeout(() => {\r\n          const [barOneIndex, newHeight] = animations[i].positions;\r\n          const barOneStyle = arrayBars[barOneIndex].style;\r\n          barOneStyle.height = `${newHeight / 1.4}px`;\r\n        }, i * speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  function AnimateQuickSort() {\r\n    const animations = getQuickSortAnimations(array);\r\n    console.log(animations);\r\n    for (let i = 0; i < animations.length; i += 1) {\r\n      const arrayBars = document.getElementsByClassName(classes.arrayElement);\r\n      if (animations[i].operation === 'change-color') {\r\n        const [barOneIndex, barTwoIndex] = animations[i].positions;\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n          barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n        }, i * speed);\r\n      }\r\n      if (animations[i].operation === 'revert-color') {\r\n        const [barOneIndex, barTwoIndex] = animations[i].positions;\r\n        const barOneStyle = arrayBars[barOneIndex].style;\r\n        const barTwoStyle = arrayBars[barTwoIndex].style;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n          barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n        }, i * speed);\r\n      }\r\n      if (animations[i].operation === 'swap') {\r\n        setTimeout(() => {\r\n          const [barOneIndex, newHeight] = animations[i].positions;\r\n          const barOneStyle = arrayBars[barOneIndex].style;\r\n          barOneStyle.height = `${newHeight / 1.4}px`;\r\n        }, i * speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.arrayConatainer}>\r\n        {array.map((value, index) => (\r\n          <div\r\n            className={classes.arrayElement}\r\n            style={{ height: `${value / 1.4}px` }}\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            key={index}\r\n          />\r\n        ))}\r\n      </Box>\r\n      <Box className={classes.buttonsBar}>\r\n        <Button\r\n          className={classes.buttonSpacing}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={AnimateMergesort}\r\n        >\r\n          MergeSort\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          className={classes.buttonSpacing}\r\n          color=\"primary\"\r\n          onClick={AnimateBubbleSort}\r\n        >\r\n          BubbleSort\r\n        </Button>\r\n        <Button\r\n          className={classes.buttonSpacing}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={AnimateQuickSort}\r\n        >\r\n          quicksort\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SortingVizualizer);\r\n","export default function bubbleSortAnimations(array) {\r\n  const animations = [];\r\n  let swapped;\r\n  do {\r\n    swapped = false;\r\n    for (let i = 0; i < array.length - 1; i++) {\r\n      // change color\r\n      let animation = {\r\n        operation: 'change-color',\r\n        positions: [i, i + 1]\r\n      };\r\n      animations.push(animation);\r\n      // swap\r\n      if (array[i] > array[i + 1]) {\r\n        animation = {\r\n          operation: 'swap',\r\n          positions: [i, array[i + 1]]\r\n        };\r\n        animations.push(animation);\r\n        animation = {\r\n          operation: 'swap',\r\n          positions: [i + 1, array[i]]\r\n        };\r\n        animations.push(animation);\r\n        const tmp = array[i];\r\n        array[i] = array[i + 1];\r\n        array[i + 1] = tmp;\r\n        swapped = true;\r\n      }\r\n\r\n      // revert color\r\n      animation = {\r\n        operation: 'revert-color',\r\n        positions: [i, i + 1]\r\n      };\r\n      animations.push(animation);\r\n    }\r\n  } while (swapped);\r\n  return animations;\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport SortingVisualizer from '../SortingVisualizer';\r\n\r\nconst styles = theme => ({\r\n  appBarColor: {\r\n    backgroundColor: '#408050'\r\n  },\r\n  title: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  sliderBox: {\r\n    width: 100,\r\n    marginLeft: 40,\r\n    marginTop: 15\r\n  },\r\n  sliderText: {\r\n    position: 'absolute',\r\n    paddingBottom: 10\r\n  },\r\n  slider: {\r\n    marginTop: 20\r\n  },\r\n  buttonReset: {\r\n    marginLeft: 40\r\n  }\r\n});\r\n\r\nclass personalizedAppBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      speed: 1,\r\n      arraySize: 600,\r\n      array: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  handleSliderChange(value, prop) {\r\n    if (prop === 'speed') {\r\n      value = 100 - value;\r\n    }\r\n    this.setState({ [prop]: value });\r\n  }\r\n\r\n  resetArray() {\r\n    const newArray = [];\r\n    for (let i = 0; i < this.state.arraySize; i += 1) {\r\n      newArray.push(this.randomInt(10, 1000));\r\n    }\r\n    this.setState({ array: newArray });\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  randomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <AppBar position=\"static\" className={classes.appBarColor}>\r\n          <Container maxWidth=\"lg\">\r\n            <Toolbar>\r\n              <Typography align=\"center\" color=\"secondary\" variant=\"h5\" className={classes.title}>\r\n                Sorting Visualizer\r\n              </Typography>\r\n              <Box className={classes.sliderBox}>\r\n                <Typography className={classes.sliderText}>Array Size</Typography>\r\n                <Slider\r\n                  min={4}\r\n                  className={classes.slider}\r\n                  onChange={(e, value) => this.handleSliderChange(value, 'arraySize')}\r\n                  max={250}\r\n                  color=\"secondary\"\r\n                  defaultValue={250}\r\n                />\r\n              </Box>\r\n              <Box className={classes.sliderBox}>\r\n                <Typography className={classes.sliderText}>Animation Speed</Typography>\r\n                <Slider\r\n                  onChange={(e, value) => this.handleSliderChange(value, 'speed')}\r\n                  className={classes.slider}\r\n                  max={100}\r\n                  color=\"secondary\"\r\n                  defaultValue={100}\r\n                />\r\n              </Box>\r\n              <Button\r\n                className={classes.buttonReset}\r\n                onClick={() => this.resetArray()}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n              >\r\n                reset\r\n              </Button>\r\n            </Toolbar>\r\n          </Container>\r\n        </AppBar>\r\n        <SortingVisualizer array={this.state.array} speed={this.state.speed} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(personalizedAppBar);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport App from './components/App';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#408050'\n    },\n    secondary: {\n      main: '#fff'\n    }\n  }\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}